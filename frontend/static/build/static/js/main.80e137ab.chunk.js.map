{"version":3,"sources":["components/Login.js","components/Register.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","username","email","password","handleLogin","bind","handleInput","e","object","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","catch","error","console","log","data","key","set","this","handleLoggedIn","event","setState","target","name","value","action","onSubmit","htmlFor","type","onChange","id","className","onClick","handleLoginOrRegister","Component","Register","password1","password2","handleRegister","href","Profile","handleLogout","remove","handleIsLoggedIn","handleSubmit","handleImage","profile_picture","src","preview","alt","App","formData","FormData","append","loginOrRegister","isLoggedIn","preview_picture","previousState","isloggedIn","file","files","reader","FileReader","onloadend","result","readAsDataURL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80e137ab.chunk.js","sourcesContent":["import {Component} from 'react';\nimport Cookies from \"js-cookie\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\"\n        }\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async handleLogin(e, object) {\n        e.preventDefault();\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/Json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: JSON.stringify({\n                username: object.username,\n                email: object.email,\n                password: object.password\n            }),\n        }\n        const response = await fetch(\"/rest-auth/login/\", options);\n        const data = await response.json().catch(error => console.log(error));\n\n        if (data.key) {\n            Cookies.set(\"Authorization\", `Token ${data.key}`)\n            this.props.handleLoggedIn()\n        } else {\n            console.log(data)\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    render() {\n        return <>\n            <form action=\"\" onSubmit={(e) => this.handleLogin(e, this.state)}>\n                <h2>Login</h2>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.username}\n                       name=\"username\"\n                       id=\"username\"/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\"\n                       onChange={this.handleInput}\n                       value={this.state.email}\n                       name=\"email\"\n                       id=\"email\"/>\n                <label htmlFor=\"password\">password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password}\n                       name=\"password\"\n                       id=\"password\"/>\n                <button className=\"form-btn\" type=\"submit\">Login</button>\n            </form>\n            <p>Don't have an account? Why not <button className=\"link\"\n                                                      onClick={() => this.props.handleLoginOrRegister()}>Register</button> an\n                account first.\n            </p>\n        </>\n    }\n}\n\nexport default Login\n\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password1: \"\",\n            password2: \"\"\n        }\n\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n    async handleRegister(e, object) {\n        e.preventDefault();\n        console.log(object);\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/Json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: {\n                body: JSON.stringify(object)\n            }\n        }\n\n        const response = await fetch(\"/rest-auth/registration/\", options);\n        const data = await response.json().catch(error => console.log(error));\n        console.log(data);\n        if (data.key) {\n            Cookies.set(\"Authorization\", `Token ${data.key}`)\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n    render() {\n        return <>\n            <form onSubmit={(e) => this.handleRegister(e, this.state)}>\n                <h2>Register</h2>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\"\n                       name=\"username\"\n                       onChange={this.handleInput}\n                       value={this.state.username}\n                       id=\"username\"/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\"\n                       onChange={this.handleInput}\n                       value={this.state.email}\n                       name=\"email\"\n                       id=\"email\"/>\n                <label htmlFor=\"password1\">Password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password1}\n                       name=\"password1\"\n                       id=\"password1\"/>\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password2}\n                       name=\"password2\"\n                       id=\"password2\"/>\n                <button className=\"form-btn\" type=\"submit\">Register</button>\n                <p>Already have an account? Please <button className=\"link\" onClick={() => this.props.handleLoginOrRegister()} href=\"#\">Login</button> </p>\n            </form>\n        </>\n    }\n}\n\nexport default Register","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleLogout() {\n        Cookies.remove('Authorization');\n        this.props.handleIsLoggedIn();\n    }\n\n    render() {\n        return <>\n            <form action=\"\" onSubmit={this.props.handleSubmit}>\n                <input className=\"file\" type=\"file\" name=\"profile_picture\" onChange={this.props.handleImage}/>\n                {\n                    this.props.profile_picture && <img src={this.props.preview} alt=\"preview\"/>\n                }\n                <button className=\"form-btn\" type=\"submit\">Save</button>\n            </form>\n            <button onClick={() => this.handleLogout()} className=\"form-btn\">Logout</button>\n        </>;\n    }\n}\n\nexport default Profile;","import './App.css';\nimport {Component} from \"react\";\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\n\nimport Cookies from 'js-cookie'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginOrRegister: true,\n            isLoggedIn: !!Cookies.get(\"Authorization\"),\n            preview_picture: null,\n            preview: \"\"\n        }\n        this.handleLoginOrRegister = this.handleLoginOrRegister.bind(this);\n        this.handleIsLoggedIn = this.handleIsLoggedIn.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n    }\n\n    handleLoginOrRegister() {\n        this.setState((previousState) => ({\n            loginOrRegister: !previousState.loginOrRegister\n        }))\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({\n            isloggedIn: !previousState.isloggedIn\n        }))\n    }\n\n    handleImage(e) {\n        let file = e.target.files[0];\n        this.setState({\n            profile_picture: file,\n        })\n\n        let reader = new FileReader();\n        reader.onloadend = () => {\n            this.setState({preview: reader.result})\n        }\n        reader.readAsDataURL(file);\n        e.preventDefault();\n    }\n\n    handleSubmit = async (e, object) => {\n        e.preventDefault();\n        let formData = new FormData();\n\n        formData.append('profile_picture', this.state.profile_picture);\n        formData.append('user', object.username);\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\")\n            },\n            body: formData\n        }\n\n        const response = await fetch(\"/profiles/\", options);\n\n        console.log(response);\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    this.state.isLoggedIn\n                        ?\n                        <Profile handleIsLoggedIn={this.handleIsLoggedIn}\n                                handleImage={this.handleImage}\n                                 handleSubmit={this.handleSubmit}/>\n                        :\n                        this.state.loginOrRegister\n                            ?\n                            <Login handleLoggedIn={this.handleIsLoggedIn}\n                                   handleLoginOrRegister={this.handleLoginOrRegister}/>\n                            :\n                            <Register handleLoginOrRegister={this.handleLoginOrRegister}/>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}