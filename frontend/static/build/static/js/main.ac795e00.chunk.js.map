{"version":3,"sources":["components/Login.js","components/Register.js","components/Profile.js","components/FullList.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","username","email","password","handleLogin","bind","handleInput","e","object","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","catch","error","console","log","data","key","set","this","handleLoggedIn","event","setState","target","name","value","action","onSubmit","htmlFor","type","onChange","id","className","onClick","handleLoginOrRegister","Component","Register","password1","password2","handleRegister","href","Profile","handleSubmit","formData","FormData","append","profile_picture","preview","articles","user","title","handleLogout","handleImage","users","userData","file","files","reader","FileReader","onloadend","result","readAsDataURL","remove","handleIsLoggedIn","map","article","audio","handleDelete","alt","src","FullList","author","App","loginOrRegister","isLoggedIn","preview_picture","previousState","isloggedIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac795e00.chunk.js","sourcesContent":["import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: ''\n        };\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async handleLogin(e, object) {\n        e.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: object.username,\n                email: object.email,\n                password: object.password\n            }),\n        };\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json().catch(error => console.log(error));\n\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            this.props.handleLoggedIn();\n        } else {\n            console.log(data);\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        return <>\n            <form action=\"\" onSubmit={(e) => this.handleLogin(e, this.state)}>\n                <h2>Login</h2>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.username}\n                       name=\"username\"\n                       id=\"username\"/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\"\n                       onChange={this.handleInput}\n                       value={this.state.email}\n                       name=\"email\"\n                       id=\"email\"/>\n                <label htmlFor=\"password\">password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password}\n                       name=\"password\"\n                       id=\"password\"/>\n                <button className=\"form-btn\" type=\"submit\">Login</button>\n                <p>Don't have an account? Why not <button className=\"link\"\n                                                      onClick={() => this.props.handleLoginOrRegister()}>Register</button> an\n                account first.\n            </p>\n            </form>\n        </>;\n    }\n}\n\nexport default Login;\n\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: ''\n        };\n\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async handleRegister(e, object) {\n        e.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify(object)\n        };\n\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json().catch(error => console.log(error));\n        console.log(object);\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        return <>\n            <form onSubmit={(e) => this.handleRegister(e, this.state)}>\n                <h2>Register</h2>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\"\n                       name=\"username\"\n                       onChange={this.handleInput}\n                       value={this.state.username}\n                       id=\"username\"/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\"\n                       onChange={this.handleInput}\n                       value={this.state.email}\n                       name=\"email\"\n                       id=\"email\"/>\n                <label htmlFor=\"password1\">Password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password1}\n                       name=\"password1\"\n                       id=\"password1\"/>\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password2}\n                       name=\"password2\"\n                       id=\"password2\"/>\n                <button className=\"form-btn\" type=\"submit\">Register</button>\n                <p>Already have an account? Please <button className=\"link\"\n                                                           onClick={() => this.props.handleLoginOrRegister()}\n                                                           href=\"#\">Login</button></p>\n            </form>\n        </>;\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profile_picture: null,\n            preview: '',\n            articles: [],\n            user: '',\n            title: '',\n            body: ''\n        };\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const articles = await fetch('/api/v1/articles/create/');\n        const data = await articles.json();\n        this.setState({articles: data});\n        const users = await fetch('/rest-auth/user');\n        const userData = await users.json();\n        console.log(userData);\n    }\n\n    handleImage(e) {\n        let file = e.target.files[0];\n        this.setState({\n            profile_picture: file,\n        });\n\n        let reader = new FileReader();\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n        reader.readAsDataURL(file);\n        e.preventDefault();\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let formData = new FormData();\n\n        formData.append('profile_picture', this.state.profile_picture);\n        formData.append('user', Cookies.get('csrftoken'));\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/profiles/detail/', options);\n\n        console.log(response);\n    };\n\n    handleLogout() {\n        Cookies.remove('Authorization');\n        this.props.handleIsLoggedIn();\n    }\n\n    async handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        const response = await fetch(`/api/v1/articles/delete/${id}`, options);\n        const data = await response.json();\n        console.log(data);\n\n    }\n\n\n    render() {\n        const articles = this.state.articles.map(article => <section key={article.id}>\n            <h2>{article.title}</h2>\n            <p>{article.body}</p>\n            <p>{article.audio}</p>\n            <button>Edit</button>\n            <button onClick={() => this.handleDelete(article.id)}>Delete</button>\n        </section>);\n        return <>\n            <h1>jpb3</h1>\n            <img alt=\"jpb3\"/>\n            {articles}\n            <form action=\"\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" name=\"title\" id=\"title\"/>\n                <label htmlFor=\"body\">Body</label>\n                <textarea type=\"text\" name=\"body\" id=\"body\"/>\n                <button className=\"form-btn\">Submit Article</button>\n            </form>\n            <form action=\"\" onSubmit={this.handleSubmit}>\n                <input className=\"file\" type=\"file\" name=\"profile_picture\" onChange={this.handleImage}/>\n                {\n                    this.state.profile_picture && <img src={this.state.preview} alt=\"preview\"/>\n                }\n                <button className=\"form-btn\" type=\"submit\">Save</button>\n            </form>\n            <button onClick={() => this.handleLogout()} className=\"form-btn\">Logout</button>\n        </>;\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\n\nclass FullList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: []\n        };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/articles/');\n        const data = await response.json();\n        this.setState({articles: data});\n    }\n\n    async getArticles() {\n        const response = await fetch('/api/v1/articles/');\n        const data = await response.json();\n        this.setState({articles: data});\n    }\n\n    render() {\n        const articles = this.state.articles.map(article => <li key={article.id}>\n            <h2>{article.title}</h2>\n            <p>{article.body}</p>\n            <p>{article.author}</p>\n        </li>);\n        return (\n            <ul>\n                {articles}\n            </ul>\n        );\n    }\n}\n\nexport default FullList;","import './App.css';\nimport {Component} from 'react';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport FullList from './components/FullList';\n\nimport Cookies from 'js-cookie';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginOrRegister: false,\n            isLoggedIn: !!Cookies.get('Authorization'),\n            preview_picture: null,\n            preview: ''\n        };\n        this.handleLoginOrRegister = this.handleLoginOrRegister.bind(this);\n        this.handleIsLoggedIn = this.handleIsLoggedIn.bind(this);\n    }\n\n    handleLoginOrRegister() {\n        this.setState((previousState) => ({\n            loginOrRegister: !previousState.loginOrRegister\n        }));\n    }\n\n    handleIsLoggedIn() {\n        this.setState((previousState) => ({\n            isLoggedIn: !previousState.isloggedIn\n        }));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {\n                    this.state.isLoggedIn\n                        ?\n                        <Profile handleIsLoggedIn={this.handleIsLoggedIn}/>\n                        :\n                        this.state.loginOrRegister\n                            ?\n                            <>\n                            <div className=\"split\">\n                                <Login handleLoggedIn={this.handleIsLoggedIn}\n                                       handleLoginOrRegister={this.handleLoginOrRegister}/>\n                                <FullList/>\n                            </div>\n                            </>\n                            :\n                            <div className=\"split\">\n                            <Register handleLoginOrRegister={this.handleLoginOrRegister}/>\n                            <FullList/>\n                            </div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/*<BrowserRouter>*/}\n            <App/>\n        {/*</BrowserRouter>*/}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}