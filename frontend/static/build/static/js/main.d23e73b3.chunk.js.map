{"version":3,"sources":["components/Header.js","components/user/Register.js","components/user/Login.js","components/user/Profile.js","components/news-filters/Astronomy.js","components/news-filters/FullList.js","components/news-filters/Cosmology.js","components/news-filters/Exoplanets.js","components/news-filters/Editorial.js","App.js","reportWebVitals.js","index.js"],"names":["Header","console","log","this","props","isLoggedIn","to","Component","Register","state","username","email","password1","password2","handleRegister","bind","handleInput","e","object","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","json","catch","error","data","key","set","event","setState","target","name","value","onSubmit","htmlFor","type","onChange","id","className","Login","password","handleLogin","action","Profile","handleSubmit","formData","FormData","append","profile_picture","isEditMode","preview","articles","user","title","article_type","handleLogout","handleImage","handleEditOrPost","userData","undefined","file","files","reader","FileReader","onloadend","result","readAsDataURL","remove","article","previousState","author","map","onClick","handleEdit","handleDelete","src","alt","Astronomy","astro_articles","FullList","article_status","Cosmology","cosmo_articles","Exoplanets","exo_articles","Editorial","editorial_articles","App","loginOrRegister","preview_picture","handleLoginOrRegister","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d23e73b3.chunk.js","sourcesContent":["import {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Header extends Component {\n    render() {\n        console.log(this.props.isLoggedIn);\n        if(this.props.isLoggedIn) {\n            return <header>\n            <nav>\n                <Link to=\"/news\">News</Link>\n                <Link to=\"/astronomy\">Astronomy</Link>\n                <Link to=\"/cosmology\">Cosmology</Link>\n                <Link to=\"/exoplanets\">Exoplanets</Link>\n                <Link to=\"/editorial\">Editorial</Link>\n                <Link to=\"/profile\">Profile</Link>\n                <Link to=\"/\"/>\n            </nav>\n        </header>;\n        } else{\n            return <header>\n            <nav>\n                <Link to=\"/news\">News</Link>\n                <Link to=\"/astronomy\">Astronomy</Link>\n                <Link to=\"/cosmology\">Cosmology</Link>\n                <Link to=\"/exoplanets\">Exoplanets</Link>\n                <Link to=\"/editorial\">Editorial</Link>\n                <Link to=\"/login\">Login</Link>\n                <Link to=\"/register\">Register</Link>\n                <Link to=\"/\"/>\n            </nav>\n        </header>;\n        }\n\n    }\n}\n\nexport default Header;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {NavLink} from 'react-router-dom';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password1: '',\n            password2: ''\n        };\n\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async handleRegister(e, object) {\n        e.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify(object)\n        };\n\n        const response = await fetch('/rest-auth/registration/', options);\n        const data = await response.json().catch(error => console.log(error));\n        // console.log(object);\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        return <>\n            <form onSubmit={(e) => this.handleRegister(e, this.state)}>\n                <h2>Register</h2>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\"\n                       name=\"username\"\n                       onChange={this.handleInput}\n                       value={this.state.username}\n                       id=\"username\"/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\"\n                       onChange={this.handleInput}\n                       value={this.state.email}\n                       name=\"email\"\n                       id=\"email\"/>\n                <label htmlFor=\"password1\">Password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password1}\n                       name=\"password1\"\n                       id=\"password1\"/>\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password2}\n                       name=\"password2\"\n                       id=\"password2\"/>\n                <button className=\"form-btn\" type=\"submit\">Register</button>\n                <p>Already have an account? Please <NavLink to=\"/login\" className=\"link\">Login</NavLink></p>\n            </form>\n        </>;\n    }\n}\n\nexport default Register;","import {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {NavLink} from 'react-router-dom';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: ''\n        };\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async handleLogin(e, object) {\n        e.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: JSON.stringify({\n                username: object.username,\n                email: object.email,\n                password: object.password\n            }),\n        };\n        const response = await fetch('/rest-auth/login/', options);\n        const data = await response.json().catch(error => console.log(error));\n\n        if (data.key) {\n            Cookies.set('Authorization', `Token ${data.key}`);\n            this.props.handleLogin();\n        } else {\n            console.log(data);\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        return <>\n            <form action=\"\" onSubmit={(e) => this.handleLogin(e, this.state)}>\n                <h2>Login</h2>\n                <label htmlFor=\"username\">Username</label>\n                <input type=\"text\"\n                       onChange={this.handleInput}\n                       value={this.state.username}\n                       name=\"username\"\n                       id=\"username\"/>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\"\n                       onChange={this.handleInput}\n                       value={this.state.email}\n                       name=\"email\"\n                       id=\"email\"/>\n                <label htmlFor=\"password\">password</label>\n                <input type=\"password\"\n                       onChange={this.handleInput}\n                       value={this.state.password}\n                       name=\"password\"\n                       id=\"password\"/>\n                <button className=\"form-btn\" type=\"submit\">Login</button>\n                <p>Don't have an account? Why not <NavLink to=\"/register\" className=\"link\">Register</NavLink> an\n                account first.\n            </p>\n            </form>\n        </>;\n    }\n}\n\nexport default Login;\n\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profile_picture: null,\n            isEditMode: false,\n            preview: '',\n            articles: [],\n            user: '',\n            id: 0,\n            title: '',\n            body: '',\n            article_type: ''\n        };\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.handleEditOrPost = this.handleEditOrPost.bind(this);\n    }\n\n    async componentDidMount() {\n        const articles = await fetch('/api/v1/articles/');\n        const data = await articles.json().catch(error => console.log(error));\n        const user = await fetch('/rest-auth/user');\n        const userData = await user.json();\n        if (data !== undefined) {\n            this.setState({articles: data});\n        } else {\n            this.setState({articles: []})\n        }\n        this.setState({user: userData.username});\n    }\n\n    handleImage(e) {\n        let file = e.target.files[0];\n        this.setState({\n            profile_picture: file,\n        });\n\n        let reader = new FileReader();\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n        reader.readAsDataURL(file);\n        e.preventDefault();\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let formData = new FormData();\n\n        formData.append('profile_picture', this.state.profile_picture);\n        formData.append('user', Cookies.get('csrftoken'));\n        const options = {\n            method: 'PUT',\n            headers: {\n                'X-CSRFToken': Cookies.get('csrftoken')\n            },\n            body: formData\n        };\n\n        const response = await fetch('/api/v1/profiles/detail/', options);\n    };\n\n    handleLogout() {\n        Cookies.remove('Authorization');\n    }\n\n    async handleDelete(id) {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'Application/Json',\n                'X-CSRFToken': Cookies.get('csrftoken')\n            }\n        };\n        const response = await fetch(`/api/v1/articles/delete/${id}`, options);\n        const data = await response.json();\n\n    }\n\n    async handleEdit(article) {\n        this.setState({id: article.id, title: article.title, body: article.body, article_type: article.article_type});\n        this.setState((previousState) => ({isEditMode: !previousState.isEditMode}));\n    }\n\n    async handleEditOrPost(e, id, title, body) {\n        e.preventDefault();\n        if (this.state.isEditMode) {\n            const options = {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'Application/Json',\n                    'X-CSRFToken': Cookies.get('csrftoken')\n                },\n                body: JSON.stringify({\n                    author: this.state.user,\n                    title: title,\n                    body: body,\n                })\n\n            };\n            const response = await fetch(`/api/v1/articles/edit/${id}/`, options);\n            const data = await response.json();\n\n            this.setState({id, title: this.state.title, body: this.state.body, });\n            this.setState({isEditMode: false});\n        } else {\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'Application/Json',\n                    'Authorization': Cookies.get('Authorization'),\n                },\n                body: {\n                    body: JSON.stringify({\n                        author: this.state.user,\n                        title: title,\n                        body: body,\n                    })\n                }\n            };\n\n            const response = await fetch(`/api/v1/articles/create/`, options);\n            const data = await response.json();\n            console.log(data);\n            this.setState({id, title: this.state.title, body: this.state.body});\n        }\n    }\n\n    handleInput(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    render() {\n        const articles = this.state.articles?.map(article => <section key={article.id}>\n            <h2>{article.title}</h2>\n            <p>{article.body}</p>\n            <p>{article.author}</p>\n            <button className=\"btn\" onClick={() => this.handleEdit(article)}>Edit</button>\n            <button className=\"btn\" onClick={() => this.handleDelete(article.id)}>Delete</button>\n        </section>);\n        if (this.props.isLoggedIn) {\n            return <>\n                <h1>{this.state.user}</h1>\n                {/*<img alt=\"jpb3\"/>*/}\n                {articles}\n                <form action=\"\"\n                      onSubmit={(e) => this.handleEditOrPost(e, this.state.id, this.state.title, this.state.body)}>\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\"\n                           value={this.state.title}\n                           onChange={this.handleInput}\n                           name=\"title\"\n                           id=\"title\"/>\n                    <label htmlFor=\"body\">Body</label>\n                    <textarea\n                        value={this.state.body}\n                        onChange={this.handleInput}\n                        name=\"body\"\n                        id=\"body\"/>\n                    <select>\n                        <option name=\"astronomy\"\n                                value={this.state.article_type}>Astronomy</option>\n                        <option name=\"cosmology\"\n                                value={this.state.article_type}>Cosmology</option>\n                        <option name=\"exoplanets\"\n                                value={this.state.article_type}>Exoplanets</option>\n                        <option name=\"editorial\"\n                                value={this.state.article_type}>Editorial</option>\n                    </select>\n                    {\n                        !this.state.isEditMode\n                            ?\n                            <button className=\"form-btn\" type=\"submit\">Submit an Article</button>\n                            :\n                            <button className=\"form-btn\" type=\"submit\">Edit your article</button>\n                    }\n                </form>\n                {/*The image uploader.*/}\n                <form action=\"\" onSubmit={this.handleSubmit}>\n                    <input className=\"file\" type=\"file\" name=\"profile_picture\" onChange={this.handleImage}/>\n                    {\n                        this.state.profile_picture && <img src={this.state.preview} alt=\"preview\"/>\n                    }\n                </form>\n                <button onClick={() => this.handleLogout()} className=\"form-btn\">Logout</button>\n            </>;\n        } else {\n            return <div>Please Log in</div>;\n        }\n    }\n}\n\nexport default Profile;","import {Component} from 'react';\n\nclass Astronomy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: []\n        };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/articles/astronomy/');\n        const data = await response.json();\n        this.setState({articles: data});\n    }\n\n    render() {\n        const astro_articles = this.state.articles.map(article => <section key={article.id}>\n            <>\n                <h2>{article.title}</h2>\n                <p>{article.body}</p>\n                <p>{article.author}</p>\n                <p>{article.article_type}</p>\n            </>\n        </section>);\n        return <>{astro_articles}</>;\n    }\n}\n\nexport default Astronomy;","import {Component} from 'react';\n\nclass FullList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: []\n    };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/articles/');\n        const data = await response.json();\n        this.setState({articles: data});\n    }\n\n\n    render() {\n        const articles = this.state.articles.map(article => <section key={article.id}>\n            {\n                // Ignore the warnings.\n                article.article_status === 'published'\n                    ?\n                    <>\n                        <h2>{article.title}</h2>\n                        <p>{article.body}</p>\n                        <p>{article.author}</p>\n                        <p>{article.article_type}</p>\n                    </>\n                    :\n                    null\n            }\n        </section>);\n        return (\n            <div>\n                {articles}\n            </div>\n        );\n    }\n}\n\nexport default FullList;","import {Component} from 'react';\n\nclass Cosmology extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: []\n        }\n    }\n    async componentDidMount() {\n        const response = await fetch(\"/api/v1/articles/cosmology/\");\n        const data = await response.json();\n        this.setState({articles: data});\n    }\n\n    render() {\n        const cosmo_articles = this.state.articles.map(article => <section key={article.id}>\n            <h2>{article.title}</h2>\n            <p>{article.body}</p>\n            <p>{article.author}</p>\n            <p>{article.article_type}</p>\n        </section>)\n        return  <>{cosmo_articles}</>\n    }\n}\n\nexport default Cosmology","import {Component} from 'react';\n\nclass Exoplanets extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: []\n        };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/articles/exoplanets/');\n        const data = await response.json();\n        this.setState({articles: data});\n    }\n\n    render() {\n        const exo_articles = this.state.articles.map(article => <section key={article.id}>\n            <h2>{article.title}</h2>\n            <p>{article.body}</p>\n            <p>{article.author}</p>\n            <p>{article.article_type}</p>\n        </section>)\n        return <>{exo_articles}</>;\n    }\n}\n\nexport default Exoplanets;","import {Component} from 'react';\n\nclass Editorial extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            articles: []\n        };\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/v1/articles/editorial/');\n        const data = await response.json();\n        this.setState({articles: data});\n    }\n\n    render() {\n        const editorial_articles = this.state.articles.map(article => <section key={article.id}>\n            <h2>{article.title}</h2>\n            <p>{article.body}</p>\n            <p>{article.author}</p>\n            <p>{article.article_type}</p>\n        </section>)\n        return <>{editorial_articles}</>;\n    }\n}\n\nexport default Editorial;","import './App.css';\nimport {Component} from 'react';\nimport Header from './components/Header';\nimport Register from './components/user/Register';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport Astronomy from './components/news-filters/Astronomy';\nimport Cookies from 'js-cookie';\nimport {Switch, Route} from 'react-router-dom';\nimport FullList from './components/news-filters/FullList';\nimport Cosmology from './components/news-filters/Cosmology';\nimport Exoplanets from './components/news-filters/Exoplanets';\nimport Editorial from './components/news-filters/Editorial';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginOrRegister: false,\n            isLoggedIn: !!Cookies.get('Authorization'),\n            preview_picture: null,\n            preview: ''\n        };\n        this.handleLoginOrRegister = this.handleLoginOrRegister.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleLoginOrRegister() {\n        this.setState((previousState) => ({\n            loginOrRegister: !previousState.loginOrRegister\n        }));\n    }\n\n    handleLogin() {\n        this.setState({isLoggedIn: !!Cookies.get('Authorization')});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header isLoggedIn={this.state.isLoggedIn}/>\n                <Switch>\n                    <Route path=\"/profile\" render={(props) => <Profile {...props} isLoggedIn={this.state.isLoggedIn}/>}/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/login\" render={(props) => <Login {...props} isLoggedIn={this.state.isLoggedIn} handleLogin={this.handleLogin}/>}/>\n                    <Route path=\"/astronomy\" component={Astronomy}/>\n                    <Route path=\"/cosmology\" component={Cosmology}/>\n                    <Route path=\"/exoplanets\" component={Exoplanets}/>\n                    <Route path=\"/editorial\" component={Editorial}/>\n                    <Route path=\"/\" component={FullList}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}